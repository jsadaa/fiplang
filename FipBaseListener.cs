//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Fip.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IFipListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class FipBaseListener : IFipListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FipParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile([NotNull] FipParser.FileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FipParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile([NotNull] FipParser.FileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FipParser.commandline"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommandline([NotNull] FipParser.CommandlineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FipParser.commandline"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommandline([NotNull] FipParser.CommandlineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FipParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommand([NotNull] FipParser.CommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FipParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommand([NotNull] FipParser.CommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FipParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] FipParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FipParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] FipParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FipParser.update"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpdate([NotNull] FipParser.UpdateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FipParser.update"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpdate([NotNull] FipParser.UpdateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FipParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] FipParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FipParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] FipParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringAtomExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringAtomExp([NotNull] FipParser.StringAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringAtomExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringAtomExp([NotNull] FipParser.StringAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numericAtomExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericAtomExp([NotNull] FipParser.NumericAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numericAtomExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericAtomExp([NotNull] FipParser.NumericAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>mulDivExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulDivExp([NotNull] FipParser.MulDivExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>mulDivExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulDivExp([NotNull] FipParser.MulDivExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExp([NotNull] FipParser.ParenthesisExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExp([NotNull] FipParser.ParenthesisExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierAtomExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierAtomExp([NotNull] FipParser.IdentifierAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierAtomExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierAtomExp([NotNull] FipParser.IdentifierAtomExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>addSubExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddSubExp([NotNull] FipParser.AddSubExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addSubExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddSubExp([NotNull] FipParser.AddSubExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>referenceAtomExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferenceAtomExp([NotNull] FipParser.ReferenceAtomExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>referenceAtomExp</c>
	/// labeled alternative in <see cref="FipParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferenceAtomExp([NotNull] FipParser.ReferenceAtomExpContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
